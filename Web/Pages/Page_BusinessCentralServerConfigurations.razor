@inherits Page

<AssistantPage>
    <Title>
        Business Central: Server Configurations
    </Title>
    <Body>
        <BusinessCentralServerConfiguration serverInstance="remoteMachine.oldServerInstance"
                                            config="remoteMachine.oldServerInstance.serverConfig" />
        <BusinessCentralServerConfiguration serverInstance="remoteMachine.newServerInstance"
                                            config="remoteMachine.newServerInstance.serverConfig" />
    </Body>
    <Bottom>
        <Button isEnabled="false">
            Apply
        </Button>
    </Bottom>
</AssistantPage>

@code {

    static void TransferBaseConfiguration(
        BusinessCentralServerConfiguration source,
        BusinessCentralServerConfiguration destination
    )
    {
        foreach (var key in new string[]
        {
            "DatabaseServer",
            "DatabaseInstance",
            "ServicesCertificateThumbprint",
            "ServicesCertificateValidationEnabled",
            "PublicWebBaseUrl",
            "ExtensionAllowedTargetLevel",
            "ExtendedSecurityTokenLifetime",
            "DisableTokenSigningCertificateValidation",
            "ClientServicesCredentialType",
            "UIElementRemovalOption",
            "ClientServicesPort",
        })
        {
            var sourceEntryInfo = source.entryInfos.FirstOrDefault(x => x.entry.key == key);
            var destinationEntryInfo = source.entryInfos.FirstOrDefault(x => x.entry.key == key);
            sourceEntryInfo.newValue = destinationEntryInfo.newValue;
        }
    }

    static void LoadSslConfiguration(BusinessCentralServerConfiguration configuration)
    {
        foreach (var keyValuePair in new string[][] {
            [ "ClientServicesSSLEnabled", "True" ],
            [ "SOAPServicesSSLEnabled", "True" ],
            [ "ODataServicesSSLEnabled", "True" ],
            [ "ODataServicesEnabled", "True" ]
    })
        {
            var entryInfo = configuration.entryInfos.FirstOrDefault(x => x.entry.key == keyValuePair[0]);
            entryInfo.newValue = keyValuePair[1];
        }
    }

}
