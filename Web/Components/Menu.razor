
<div id="menu">
    <ul>
        <li class="menu-root-item">
            File
            <ul>
                <MenuItem onClick="mainForm.Close">
                    Close
                </MenuItem>
            </ul>
        </li>
        <li class="menu-root-item">
            View
            <ul>
                <MenuItem onClickAsync="app.ToggleLogViewAsync">
                    @(app.LogViewVisible ? "Hide Log" : "Show Log")
                </MenuItem>
                <MenuItem onClick="mainForm.ResetWindow">
                    Reset Window
                </MenuItem>
            </ul>
        </li>
        @if (Utils.DEBUG)
        {
            <li class="menu-root-item">
                Debug
                <ul>
                    @foreach (var pageName in new string[]
                    {
                        nameof(Page_BusinessCentralServerConfiguration),
                        nameof(Page_BusinessCentralServerInstance),
                        nameof(Page_MicrosoftSqlBackup),
                        nameof(Page_MicrosoftSqlConnection),
                        nameof(Page_NewMicrosoftSqlServer),
                        nameof(Page_RemoteConnection),
                        nameof(Page_Services),
                        nameof(Page_Summary),
                        nameof(Page_Welcome),
                    })
                    {
                        var _pageName = pageName;
                        <MenuItem onClick="() => root.page = _pageName">
                            @_pageName
                        </MenuItem>
                    }
                </ul>
            </li>
        }
    </ul>
</div>

<div id="menu-overlay"></div>

@implements IDisposable

@code {

    public static List<Menu> Instances { get; } = new();

    App app => App.Instance;
    MainForm mainForm => app.mainForm;
    Root root => Root.Instance;

    protected override void OnInitialized()
    {
        Instances.Add(this);
    }

    public void Dispose()
    {
        Instances.Remove(this);
    }
}
