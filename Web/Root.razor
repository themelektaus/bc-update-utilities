<div id="root-content" class="@(App.Instance.IsBusy() ? "disabled" : "")">
    <Menu />
    @if (App.Instance.Update?.available ?? false)
    {
        <div class="update-available-message">
            New version available<br />
            <Button onClickAsync="App.Instance.PerformUpdate">Update</Button>
        </div>
    }
    @if (page is not null)
    {
        <div data-page="@(page)">
            <DynamicComponent Type="page" @ref="pageComponent" />
        </div>
    }
</div>

@if (App.Instance.LogViewVisible)
{
    <LogView />
}

@using Directory = System.IO.Directory
@using File = System.IO.File
@using Path = System.IO.Path

@code {

    public static Root Instance { get; private set; }

    Type page = typeof(Page_Welcome);

    DynamicComponent pageComponent;

    protected override void OnInitialized()
    {
        Instance = this;

        App.Instance.mainForm.Activated += (_, _) => this.RenderLater();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            App.Instance.mainForm.OnAfterFirstRender();
        }
    }

    public async Task GotoAsync(Type page)
    {
        this.page = page;

        await this.RenderLaterAsync();
    }

    public void Refresh()
    {
        foreach (var menu in Menu.Instances)
        {
            menu.RenderLater();
        }

        var page = pageComponent?.Instance as ComponentBase;

        if (page is not null)
        {
            page.RenderLater();
        }

        this.RenderLater();
    }

}
